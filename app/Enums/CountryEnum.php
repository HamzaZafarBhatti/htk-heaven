<?php

namespace App\Enums;

enum CountryEnum: string
{
    case AF = "Afghanistan";
    case AL = "Albania";
    case DZ = "Algeria";
    case AS = "American Samoa";
    case AD = "Andorra";
    case AO = "Angola";
    case AI = "Anguilla";
    case AQ = "Antarctica";
    case AG = "Antigua and Barbuda";
    case AR = "Argentina";
    case AM = "Armenia";
    case AW = "Aruba";
    case AU = "Australia";
    case AT = "Austria";
    case AZ = "Azerbaijan";
    case BS = "Bahamas";
    case BH = "Bahrain";
    case BD = "Bangladesh";
    case BB = "Barbados";
    case BY = "Belarus";
    case BE = "Belgium";
    case BZ = "Belize";
    case BJ = "Benin";
    case BM = "Bermuda";
    case BT = "Bhutan";
    case BO = "Bolivia";
    case BA = "Bosnia and Herzegovina";
    case BW = "Botswana";
    case BV = "Bouvet Island";
    case BR = "Brazil";
    case IO = "British Indian Ocean Territory";
    case BN = "Brunei Darussalam";
    case BG = "Bulgaria";
    case BF = "Burkina Faso";
    case BI = "Burundi";
    case KH = "Cambodia";
    case CM = "Cameroon";
    case CA = "Canada";
    case CV = "Cape Verde";
    case KY = "Cayman Islands";
    case CF = "Central African Republic";
    case TD = "Chad";
    case CL = "Chile";
    case CN = "China";
    case CX = "Christmas Island";
    case CC = "Cocos (Keeling) Islands";
    case CO = "Colombia";
    case KM = "Comoros";
    case CG = "Congo";
    case CD = "Congo, the Democratic Republic of the";
    case CK = "Cook Islands";
    case CR = "Costa Rica";
    case CI = "Cote D'Ivoire";
    case HR = "Croatia";
    case CU = "Cuba";
    case CY = "Cyprus";
    case CZ = "Czech Republic";
    case DK = "Denmark";
    case DJ = "Djibouti";
    case DM = "Dominica";
    case DO = "Dominican Republic";
    case EC = "Ecuador";
    case EG = "Egypt";
    case SV = "El Salvador";
    case GQ = "Equatorial Guinea";
    case ER = "Eritrea";
    case EE = "Estonia";
    case ET = "Ethiopia";
    case FK = "Falkland Islands (Malvinas)";
    case FO = "Faroe Islands";
    case FJ = "Fiji";
    case FI = "Finland";
    case FR = "France";
    case GF = "French Guiana";
    case PF = "French Polynesia";
    case TF = "French Southern Territories";
    case GA = "Gabon";
    case GM = "Gambia";
    case GE = "Georgia";
    case DE = "Germany";
    case GH = "Ghana";
    case GI = "Gibraltar";
    case GR = "Greece";
    case GL = "Greenland";
    case GD = "Grenada";
    case GP = "Guadeloupe";
    case GU = "Guam";
    case GT = "Guatemala";
    case GN = "Guinea";
    case GW = "Guinea-Bissau";
    case GY = "Guyana";
    case HT = "Haiti";
    case HM = "Heard Island and Mcdonald Islands";
    case VA = "Holy See (Vatican City State)";
    case HN = "Honduras";
    case HK = "Hong Kong";
    case HU = "Hungary";
    case IS = "Iceland";
    case IN = "India";
    case ID = "Indonesia";
    case IR = "Iran, Islamic Republic of";
    case IQ = "Iraq";
    case IE = "Ireland";
    case IL = "Israel";
    case IT = "Italy";
    case JM = "Jamaica";
    case JP = "Japan";
    case JO = "Jordan";
    case KZ = "Kazakhstan";
    case KE = "Kenya";
    case KI = "Kiribati";
    case KP = "Korea, Democratic People's Republic of";
    case KR = "Korea, Republic of";
    case KW = "Kuwait";
    case KG = "Kyrgyzstan";
    case LA = "Lao People's Democratic Republic";
    case LV = "Latvia";
    case LB = "Lebanon";
    case LS = "Lesotho";
    case LR = "Liberia";
    case LY = "Libyan Arab Jamahiriya";
    case LI = "Liechtenstein";
    case LT = "Lithuania";
    case LU = "Luxembourg";
    case MO = "Macao";
    case MK = "Macedonia, the Former Yugoslav Republic of";
    case MG = "Madagascar";
    case MW = "Malawi";
    case MY = "Malaysia";
    case MV = "Maldives";
    case ML = "Mali";
    case MT = "Malta";
    case MH = "Marshall Islands";
    case MQ = "Martinique";
    case MR = "Mauritania";
    case MU = "Mauritius";
    case YT = "Mayotte";
    case MX = "Mexico";
    case FM = "Micronesia, Federated States of";
    case MD = "Moldova, Republic of";
    case MC = "Monaco";
    case MN = "Mongolia";
    case MS = "Montserrat";
    case MA = "Morocco";
    case MZ = "Mozambique";
    case MM = "Myanmar";
    case NA = "Namibia";
    case NR = "Nauru";
    case NP = "Nepal";
    case NL = "Netherlands";
    case AN = "Netherlands Antilles";
    case NC = "New Caledonia";
    case NZ = "New Zealand";
    case NI = "Nicaragua";
    case NE = "Niger";
    case NG = "Nigeria";
    case NU = "Niue";
    case NF = "Norfolk Island";
    case MP = "Northern Mariana Islands";
    case NO = "Norway";
    case OM = "Oman";
    case PK = "Pakistan";
    case PW = "Palau";
    case PS = "Palestinian Territory, Occupied";
    case PA = "Panama";
    case PG = "Papua New Guinea";
    case PY = "Paraguay";
    case PE = "Peru";
    case PH = "Philippines";
    case PN = "Pitcairn";
    case PL = "Poland";
    case PT = "Portugal";
    case PR = "Puerto Rico";
    case QA = "Qatar";
    case RE = "Reunion";
    case RO = "Romania";
    case RU = "Russian Federation";
    case RW = "Rwanda";
    case SH = "Saint Helena";
    case KN = "Saint Kitts and Nevis";
    case LC = "Saint Lucia";
    case PM = "Saint Pierre and Miquelon";
    case VC = "Saint Vincent and the Grenadines";
    case WS = "Samoa";
    case SM = "San Marino";
    case ST = "Sao Tome and Principe";
    case SA = "Saudi Arabia";
    case SN = "Senegal";
    case CS = "Serbia and Montenegro";
    case SC = "Seychelles";
    case SL = "Sierra Leone";
    case SG = "Singapore";
    case SK = "Slovakia";
    case SI = "Slovenia";
    case SB = "Solomon Islands";
    case SO = "Somalia";
    case ZA = "South Africa";
    case GS = "South Georgia and the South Sandwich Islands";
    case ES = "Spain";
    case LK = "Sri Lanka";
    case SD = "Sudan";
    case SR = "Suriname";
    case SJ = "Svalbard and Jan Mayen";
    case SZ = "Swaziland";
    case SE = "Sweden";
    case CH = "Switzerland";
    case SY = "Syrian Arab Republic";
    case TW = "Taiwan, Province of China";
    case TJ = "Tajikistan";
    case TZ = "Tanzania, United Republic of";
    case TH = "Thailand";
    case TL = "Timor-Leste";
    case TG = "Togo";
    case TK = "Tokelau";
    case TO = "Tonga";
    case TT = "Trinidad and Tobago";
    case TN = "Tunisia";
    case TR = "Turkey";
    case TM = "Turkmenistan";
    case TC = "Turks and Caicos Islands";
    case TV = "Tuvalu";
    case UG = "Uganda";
    case UA = "Ukraine";
    case AE = "United Arab Emirates";
    case GB = "United Kingdom";
    case US = "United States";
    case UM = "United States Minor Outlying Islands";
    case UY = "Uruguay";
    case UZ = "Uzbekistan";
    case VU = "Vanuatu";
    case VE = "Venezuela";
    case VN = "Viet Nam";
    case VG = "Virgin Islands, British";
    case VI = "Virgin Islands, U.s.";
    case WF = "Wallis and Futuna";
    case EH = "Western Sahara";
    case YE = "Yemen";
    case ZM = "Zambia";
    case ZW = "Zimbabwe";

    public function getLabel(): string
    {
        return match ($this) {
            self::AF => "Afghanistan",
            self::AL => "Albania",
            self::DZ => "Algeria",
            self::AS => "American Samoa",
            self::AD => "Andorra",
            self::AO => "Angola",
            self::AI => "Anguilla",
            self::AQ => "Antarctica",
            self::AG => "Antigua and Barbuda",
            self::AR => "Argentina",
            self::AM => "Armenia",
            self::AW => "Aruba",
            self::AU => "Australia",
            self::AT => "Austria",
            self::AZ => "Azerbaijan",
            self::BS => "Bahamas",
            self::BH => "Bahrain",
            self::BD => "Bangladesh",
            self::BB => "Barbados",
            self::BY => "Belarus",
            self::BE => "Belgium",
            self::BZ => "Belize",
            self::BJ => "Benin",
            self::BM => "Bermuda",
            self::BT => "Bhutan",
            self::BO => "Bolivia",
            self::BA => "Bosnia and Herzegovina",
            self::BW => "Botswana",
            self::BV => "Bouvet Island",
            self::BR => "Brazil",
            self::IO => "British Indian Ocean Territory",
            self::BN => "Brunei Darussalam",
            self::BG => "Bulgaria",
            self::BF => "Burkina Faso",
            self::BI => "Burundi",
            self::KH => "Cambodia",
            self::CM => "Cameroon",
            self::CA => "Canada",
            self::CV => "Cape Verde",
            self::KY => "Cayman Islands",
            self::CF => "Central African Republic",
            self::TD => "Chad",
            self::CL => "Chile",
            self::CN => "China",
            self::CX => "Christmas Island",
            self::CC => "Cocos (Keeling) Islands",
            self::CO => "Colombia",
            self::KM => "Comoros",
            self::CG => "Congo",
            self::CD => "Congo, the Democratic Republic of the",
            self::CK => "Cook Islands",
            self::CR => "Costa Rica",
            self::CI => "Cote D'Ivoire",
            self::HR => "Croatia",
            self::CU => "Cuba",
            self::CY => "Cyprus",
            self::CZ => "Czech Republic",
            self::DK => "Denmark",
            self::DJ => "Djibouti",
            self::DM => "Dominica",
            self::DO => "Dominican Republic",
            self::EC => "Ecuador",
            self::EG => "Egypt",
            self::SV => "El Salvador",
            self::GQ => "Equatorial Guinea",
            self::ER => "Eritrea",
            self::EE => "Estonia",
            self::ET => "Ethiopia",
            self::FK => "Falkland Islands (Malvinas)",
            self::FO => "Faroe Islands",
            self::FJ => "Fiji",
            self::FI => "Finland",
            self::FR => "France",
            self::GF => "French Guiana",
            self::PF => "French Polynesia",
            self::TF => "French Southern Territories",
            self::GA => "Gabon",
            self::GM => "Gambia",
            self::GE => "Georgia",
            self::DE => "Germany",
            self::GH => "Ghana",
            self::GI => "Gibraltar",
            self::GR => "Greece",
            self::GL => "Greenland",
            self::GD => "Grenada",
            self::GP => "Guadeloupe",
            self::GU => "Guam",
            self::GT => "Guatemala",
            self::GN => "Guinea",
            self::GW => "Guinea-Bissau",
            self::GY => "Guyana",
            self::HT => "Haiti",
            self::HM => "Heard Island and Mcdonald Islands",
            self::VA => "Holy See (Vatican City State)",
            self::HN => "Honduras",
            self::HK => "Hong Kong",
            self::HU => "Hungary",
            self::IS => "Iceland",
            self::IN => "India",
            self::ID => "Indonesia",
            self::IR => "Iran, Islamic Republic of",
            self::IQ => "Iraq",
            self::IE => "Ireland",
            self::IL => "Israel",
            self::IT => "Italy",
            self::JM => "Jamaica",
            self::JP => "Japan",
            self::JO => "Jordan",
            self::KZ => "Kazakhstan",
            self::KE => "Kenya",
            self::KI => "Kiribati",
            self::KP => "Korea, Democratic People's Republic of",
            self::KR => "Korea, Republic of",
            self::KW => "Kuwait",
            self::KG => "Kyrgyzstan",
            self::LA => "Lao People's Democratic Republic",
            self::LV => "Latvia",
            self::LB => "Lebanon",
            self::LS => "Lesotho",
            self::LR => "Liberia",
            self::LY => "Libyan Arab Jamahiriya",
            self::LI => "Liechtenstein",
            self::LT => "Lithuania",
            self::LU => "Luxembourg",
            self::MO => "Macao",
            self::MK => "Macedonia, the Former Yugoslav Republic of",
            self::MG => "Madagascar",
            self::MW => "Malawi",
            self::MY => "Malaysia",
            self::MV => "Maldives",
            self::ML => "Mali",
            self::MT => "Malta",
            self::MH => "Marshall Islands",
            self::MQ => "Martinique",
            self::MR => "Mauritania",
            self::MU => "Mauritius",
            self::YT => "Mayotte",
            self::MX => "Mexico",
            self::FM => "Micronesia, Federated States of",
            self::MD => "Moldova, Republic of",
            self::MC => "Monaco",
            self::MN => "Mongolia",
            self::MS => "Montserrat",
            self::MA => "Morocco",
            self::MZ => "Mozambique",
            self::MM => "Myanmar",
            self::NA => "Namibia",
            self::NR => "Nauru",
            self::NP => "Nepal",
            self::NL => "Netherlands",
            self::AN => "Netherlands Antilles",
            self::NC => "New Caledonia",
            self::NZ => "New Zealand",
            self::NI => "Nicaragua",
            self::NE => "Niger",
            self::NG => "Nigeria",
            self::NU => "Niue",
            self::NF => "Norfolk Island",
            self::MP => "Northern Mariana Islands",
            self::NO => "Norway",
            self::OM => "Oman",
            self::PK => "Pakistan",
            self::PW => "Palau",
            self::PS => "Palestinian Territory, Occupied",
            self::PA => "Panama",
            self::PG => "Papua New Guinea",
            self::PY => "Paraguay",
            self::PE => "Peru",
            self::PH => "Philippines",
            self::PN => "Pitcairn",
            self::PL => "Poland",
            self::PT => "Portugal",
            self::PR => "Puerto Rico",
            self::QA => "Qatar",
            self::RE => "Reunion",
            self::RO => "Romania",
            self::RU => "Russian Federation",
            self::RW => "Rwanda",
            self::SH => "Saint Helena",
            self::KN => "Saint Kitts and Nevis",
            self::LC => "Saint Lucia",
            self::PM => "Saint Pierre and Miquelon",
            self::VC => "Saint Vincent and the Grenadines",
            self::WS => "Samoa",
            self::SM => "San Marino",
            self::ST => "Sao Tome and Principe",
            self::SA => "Saudi Arabia",
            self::SN => "Senegal",
            self::CS => "Serbia and Montenegro",
            self::SC => "Seychelles",
            self::SL => "Sierra Leone",
            self::SG => "Singapore",
            self::SK => "Slovakia",
            self::SI => "Slovenia",
            self::SB => "Solomon Islands",
            self::SO => "Somalia",
            self::ZA => "South Africa",
            self::GS => "South Georgia and the South Sandwich Islands",
            self::ES => "Spain",
            self::LK => "Sri Lanka",
            self::SD => "Sudan",
            self::SR => "Suriname",
            self::SJ => "Svalbard and Jan Mayen",
            self::SZ => "Swaziland",
            self::SE => "Sweden",
            self::CH => "Switzerland",
            self::SY => "Syrian Arab Republic",
            self::TW => "Taiwan, Province of China",
            self::TJ => "Tajikistan",
            self::TZ => "Tanzania, United Republic of",
            self::TH => "Thailand",
            self::TL => "Timor-Leste",
            self::TG => "Togo",
            self::TK => "Tokelau",
            self::TO => "Tonga",
            self::TT => "Trinidad and Tobago",
            self::TN => "Tunisia",
            self::TR => "Turkey",
            self::TM => "Turkmenistan",
            self::TC => "Turks and Caicos Islands",
            self::TV => "Tuvalu",
            self::UG => "Uganda",
            self::UA => "Ukraine",
            self::AE => "United Arab Emirates",
            self::GB => "United Kingdom",
            self::US => "United States",
            self::UM => "United States Minor Outlying Islands",
            self::UY => "Uruguay",
            self::UZ => "Uzbekistan",
            self::VU => "Vanuatu",
            self::VE => "Venezuela",
            self::VN => "Viet Nam",
            self::VG => "Virgin Islands, British",
            self::VI => "Virgin Islands, U.s.",
            self::WF => "Wallis and Futuna",
            self::EH => "Western Sahara",
            self::YE => "Yemen",
            self::ZM => "Zambia",
            self::ZW => "Zimbabwe",
        };
    }

    public static function toArray(): array
    {
        return array_column(self::cases(), 'value', 'name');
    }
}
